# Generated by Django 5.1.1 on 2024-09-07 16:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='list',
            fields=[
                ('list_id', models.AutoField(db_column='list_id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=255)),
                ('description', models.TextField(blank=True, db_column='description', null=True)),
                ('is_private', models.BooleanField(db_column='is_private', default=True)),
                ('created', models.DateTimeField(db_column='created')),
                ('modified', models.DateTimeField(db_column='modified')),
            ],
            options={
                'db_table': 'FDK_lists',
            },
        ),
        migrations.CreateModel(
            name='project',
            fields=[
                ('project_id', models.AutoField(db_column='project_id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=255)),
                ('description', models.TextField(blank=True, db_column='description', null=True)),
                ('url', models.CharField(blank=True, db_column='url', max_length=255, null=True)),
                ('public', models.BooleanField(db_column='public', default=False)),
                ('start_date', models.DateField(blank=True, db_column='start_date', null=True)),
                ('end_date', models.DateField(blank=True, db_column='end_date', null=True)),
                ('created', models.DateTimeField(blank=True, db_column='created', null=True)),
            ],
            options={
                'db_table': 'FDK_projects',
            },
        ),
        migrations.CreateModel(
            name='user',
            fields=[
                ('user_id', models.AutoField(db_column='user_id', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='username', max_length=100, unique=True)),
                ('password_hash', models.CharField(db_column='password_hash', max_length=255)),
                ('email', models.EmailField(db_column='email', max_length=255, unique=True)),
                ('description', models.CharField(blank=True, db_column='description', max_length=512, null=True)),
                ('created', models.DateTimeField(blank=True, db_column='created', null=True)),
                ('last_login', models.DateTimeField(blank=True, db_column='last_login', null=True)),
            ],
            options={
                'db_table': 'FDK_users',
            },
        ),
        migrations.CreateModel(
            name='list_item',
            fields=[
                ('item_id', models.AutoField(db_column='item_id', primary_key=True, serialize=False)),
                ('content', models.TextField(db_column='content')),
                ('item_order', models.IntegerField(db_column='item_order')),
                ('created', models.DateTimeField(db_column='created')),
                ('modified', models.DateTimeField(db_column='modified')),
                ('list', models.ForeignKey(db_column='list_id', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='fdk_cz.list')),
            ],
            options={
                'db_table': 'FDK_list_items',
            },
        ),
        migrations.CreateModel(
            name='milestone',
            fields=[
                ('milestone_id', models.AutoField(db_column='milestone_id', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='title', max_length=255)),
                ('description', models.TextField(blank=True, db_column='description', null=True)),
                ('due_date', models.DateField(blank=True, db_column='due_date', null=True)),
                ('status', models.CharField(db_column='status', default='planned', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('project', models.ForeignKey(db_column='project_id', on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='fdk_cz.project')),
            ],
            options={
                'db_table': 'FDK_milestones',
            },
        ),
        migrations.AddField(
            model_name='list',
            name='project',
            field=models.ForeignKey(db_column='project_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lists', to='fdk_cz.project'),
        ),
        migrations.CreateModel(
            name='category',
            fields=[
                ('category_id', models.AutoField(db_column='category_id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=255)),
                ('description', models.TextField(blank=True, db_column='description', null=True)),
                ('language', models.CharField(blank=True, db_column='language', max_length=2, null=True)),
                ('project', models.ForeignKey(db_column='project_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories', to='fdk_cz.project')),
            ],
            options={
                'db_table': 'FDK_categories',
            },
        ),
        migrations.CreateModel(
            name='task',
            fields=[
                ('task_id', models.AutoField(db_column='task_id', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='title', max_length=255)),
                ('description', models.TextField(blank=True, db_column='description', null=True)),
                ('priority', models.CharField(blank=True, db_column='priority', max_length=16, null=True)),
                ('status', models.CharField(blank=True, db_column='status', max_length=50, null=True)),
                ('creator', models.CharField(blank=True, db_column='creator', max_length=50, null=True)),
                ('due_date', models.DateField(blank=True, db_column='due_date', null=True)),
                ('created', models.DateTimeField(blank=True, db_column='created', null=True)),
                ('category', models.ForeignKey(db_column='category_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='fdk_cz.category')),
                ('project', models.ForeignKey(db_column='project_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='fdk_cz.project')),
                ('assigned', models.ForeignKey(db_column='assigned_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to='fdk_cz.user')),
            ],
            options={
                'db_table': 'FDK_tasks',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='owner',
            field=models.ForeignKey(db_column='owner_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_projects', to='fdk_cz.user'),
        ),
        migrations.AddField(
            model_name='list',
            name='owner',
            field=models.ForeignKey(db_column='owner_id', on_delete=django.db.models.deletion.CASCADE, related_name='owned_lists', to='fdk_cz.user'),
        ),
        migrations.CreateModel(
            name='document',
            fields=[
                ('document_id', models.AutoField(db_column='document_id', primary_key=True, serialize=False)),
                ('document_type', models.CharField(db_column='document_type', max_length=255)),
                ('title', models.CharField(db_column='title', max_length=255)),
                ('url', models.CharField(db_column='url', max_length=255)),
                ('description', models.TextField(blank=True, db_column='description', null=True)),
                ('file_path', models.CharField(db_column='file_path', max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, db_column='uploaded_at')),
                ('project', models.ForeignKey(db_column='project_id', on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='fdk_cz.project')),
                ('uploaded_by', models.ForeignKey(db_column='uploaded_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to='fdk_cz.user')),
            ],
            options={
                'db_table': 'FDK_documents',
            },
        ),
        migrations.CreateModel(
            name='comment',
            fields=[
                ('comment_id', models.AutoField(db_column='comment_id', primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True, db_column='comment', null=True)),
                ('posted', models.DateTimeField(blank=True, db_column='posted', null=True)),
                ('project', models.ForeignKey(db_column='project_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to='fdk_cz.project')),
                ('task', models.ForeignKey(db_column='task_id', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='fdk_cz.task')),
                ('user', models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to='fdk_cz.user')),
            ],
            options={
                'db_table': 'FDK_comments',
            },
        ),
        migrations.CreateModel(
            name='attachment',
            fields=[
                ('attachment_id', models.AutoField(db_column='attachment_id', primary_key=True, serialize=False)),
                ('file_name', models.CharField(db_column='file_name', max_length=255)),
                ('file_path', models.CharField(db_column='file_path', max_length=255)),
                ('uploaded_date', models.DateTimeField(blank=True, db_column='uploaded_date', null=True)),
                ('task', models.ForeignKey(db_column='task_id', on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='fdk_cz.task')),
                ('uploaded_by', models.ForeignKey(db_column='uploaded_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_attachments', to='fdk_cz.user')),
            ],
            options={
                'db_table': 'FDK_attachments',
            },
        ),
        migrations.CreateModel(
            name='activity_log',
            fields=[
                ('log_id', models.AutoField(db_column='log_id', primary_key=True, serialize=False)),
                ('user_action', models.CharField(db_column='user_action', max_length=100)),
                ('description', models.TextField(blank=True, db_column='description', null=True)),
                ('date_time', models.DateTimeField(blank=True, db_column='date_time', null=True)),
                ('user', models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activity_logs', to='fdk_cz.user')),
            ],
            options={
                'db_table': 'FDK_activity_log',
            },
        ),
    ]
